{"version":3,"sources":["components/LeftBanner.js","components/RightBanner.js","pages/Home.js","pages/SignIn.js","pages/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faBars","faHeart","faUser","faShoppingBasket","Menu","styled","div","_templateObject","LogoArea","_templateObject2","MenuArea","_templateObject3","LineSeparator","_templateObject4","Wrap","_templateObject5","StyledLink","Link","_templateObject6","LineWrap","_templateObject7","LeftBanner","react_default","a","createElement","className","to","style","textDecoration","color","padding","react_fontawesome_index_es","icon","Component","RightBanner_templateObject","RightBanner","RightBanner_Menu","Home","SignIn","SignUp","View","App_templateObject","App","BrowserRouter","textAlign","background","components_LeftBanner","Route","exact","path","component","components_RightBanner","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ecc6100.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n// font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faHeart, faUser, faShoppingBasket } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faBars, faHeart, faUser, faShoppingBasket)\n\nconst Menu = styled.div`\n  background-color: white;\n  width: 250px;\n  height: 100%;\n  position: fixed;\n  margin-left: -15.6em;\n  display: inline-block;\n`\n\nconst LogoArea = styled.div`\n  padding-bottom: 60px;\n`\n\nconst MenuArea = styled.div`\n  font-weight: 100;\n`\n\nconst LineSeparator = styled.div`\n  width: 180px;\n  height: 1px;\n  background-color: #222;\n  margin: 20px 0 30px -12px;\n`\n\nconst Wrap = styled.div`\n  margin: 64px 48px 0;\n`\n\nconst StyledLink = styled(Link)`\n  background-color: transparent !important;\n  background-image: none !important;\n  border-color: transparent;\n  border: none;\n  cursor: pointer;\n  font-weight: 100;\n  text-decoration: none;\n  color: black;\n\n  &:hover {\n    color: black;\n    text-decoration: none;\n  }\n`\n\nconst LineWrap = styled.div`\n  text-align: left;\n  height: 30px;\n`\n\nclass LeftBanner extends Component {\n  render() {\n    return (\n      <Menu className=\"banner\">\n        <Wrap>\n          <LogoArea>\n            <StyledLink to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>\n              <h3>Logo Image</h3>\n            </StyledLink>\n          </LogoArea>\n          <MenuArea>\n            <StyledLink to=\"/signin\">로그인</StyledLink> \n            <span style={{ padding: '0px 10px 0px 10px' }}>|</span>\n            <StyledLink to=\"/signup\">회원가입</StyledLink>\n          </MenuArea>\n          <LineSeparator />\n          <LineWrap>\n            <StyledLink to=\"/\"><FontAwesomeIcon icon=\"bars\" /> 카테고리</StyledLink>\n          </LineWrap>\n          <LineWrap>\n            <StyledLink to=\"/\"><FontAwesomeIcon icon=\"heart\" /> 하트</StyledLink>\n          </LineWrap>\n          <LineWrap>\n            <StyledLink to=\"/\"><FontAwesomeIcon icon=\"user\" /> 마이페이지</StyledLink>\n          </LineWrap>\n          <LineSeparator />\n          <LineWrap>\n            <StyledLink to=\"/\"><FontAwesomeIcon icon=\"shopping-basket\" /> 장바구니</StyledLink>\n          </LineWrap>\n        </Wrap>\n      </Menu>\n    );\n  }\n}\n\nexport default LeftBanner;","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Menu = styled.div`\n  background-color: white;\n  width: 250px;\n  height: 100%;\n  position: fixed;\n  display: inline-block;\n`\n\nclass RightBanner extends Component {\n  render() {\n    return (\n      <Menu className=\"banner\">\n        <h1>인기글</h1>\n      </Menu>\n    );\n  }\n}\n\nexport default RightBanner;","import React, { Component } from 'react'\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        Home<br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <br /><br /><br /><br /><br /><br /><br /><br /><br />\n        123\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nclass SignIn extends Component {\n  render() {\n    return (\n      <div>\n        SignIn\n      </div>\n    )\n  }\n}\n\nexport default SignIn;","import React, { Component } from 'react'\n\nclass SignUp extends Component {\n  render() {\n    return (\n      <div>\n        SignUp\n      </div>\n    )\n  }\n}\n\nexport default SignUp;","import React, { Component } from 'react'\nimport { Route, BrowserRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport LeftBanner from './components/LeftBanner'\nimport RightBanner from './components/RightBanner'\n\nimport Home from './pages/Home'\nimport SignIn from './pages/SignIn'\nimport SignUp from './pages/SignUp'\n\nconst View = styled.div`\n  background-color: white;\n  max-width: 500px;\n  width: 100%;\n  height: 100vh;\n  display: inline-block;\n  border-left: 1px solid #eee;\n  border-right: 1px solid #eee;\n  overflow: auto;\n`\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div style={{ textAlign: 'center', background: '#f6f6f6' }}>\n          <LeftBanner />\n          <View>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n          </View>\n          <RightBanner />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}